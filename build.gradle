plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '1.13.3'
    id 'org.jetbrains.kotlin.jvm' version '1.7.22'
    id "org.jetbrains.grammarkit" version "2021.1.3"
    id("com.palantir.git-version") version "3.0.0"
}
apply plugin: "com.palantir.git-version"

group 'cn.codetector'
def details = versionDetails()
version details.branchName + "_" + details.gitHash

sourceCompatibility = 17
buildSearchableOptions.enabled = false

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testImplementation group: 'junit', name: 'junit', version: '4.13.1'
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/gen'
        }
    }
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version = "231.8109-EAP-CANDIDATE-SNAPSHOT"
    type = "CL"
    plugins = ["com.intellij.clion", "com.intellij.cidr.base", "com.intellij.cidr.lang"]
}

compileKotlin {
    dependsOn 'generateTGLexer'
    kotlinOptions.jvmTarget = "17"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "17"
}

apply plugin: 'org.jetbrains.grammarkit'

import org.jetbrains.grammarkit.tasks.GenerateLexer
import org.jetbrains.grammarkit.tasks.GenerateParser

task generateTGLexer(type: GenerateLexer) {
    // Task configuration options
    source = "src/main/resources/cn/codetector/tablegenintellij/grammar/_TableGenLexer.flex"
    targetDir = "src/main/gen/cn/codetector/tablegenintellij/grammar"
    targetClass = "_TableGenLexer"
    purgeOldFiles = true
}

//task generateTGParser(type: GenerateParser) {
//    // Task configuration options
//    source = "src/main/resources/cn/codetector/tablegenintellij/grammar/tablegen.bnf"
//    targetRoot = 'gen'
//    pathToParser = 'src/main/gen/cn/codetector/tablegenintellij/parser/TableGenParser.java'
//    pathToPsiRoot = 'src/main/kotlin/cn/codetector/tablegenintellij/psi'
//    purgeOldFiles = true
//}
